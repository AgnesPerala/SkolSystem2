// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SkolSystem;

#nullable disable

namespace SkolSystem.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20240101145703_Mymigration")]
    partial class Mymigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SkolSystem.Models.Betyg", b =>
                {
                    b.Property<int>("KursID")
                        .HasColumnType("int");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersonalID")
                        .HasColumnType("int");

                    b.Property<int>("SlutBetyg")
                        .HasColumnType("int");

                    b.HasKey("KursID", "StudentID");

                    b.HasIndex("PersonalID");

                    b.HasIndex("StudentID");

                    b.ToTable("Betyg");
                });

            modelBuilder.Entity("SkolSystem.Models.Klass", b =>
                {
                    b.Property<int>("KlassID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KlassID"));

                    b.Property<string>("KlassNamn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KlassID");

                    b.ToTable("Klass");
                });

            modelBuilder.Entity("SkolSystem.Models.Kurs", b =>
                {
                    b.Property<int>("KursID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KursID"));

                    b.Property<string>("KursNamn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonalID")
                        .HasColumnType("int");

                    b.HasKey("KursID");

                    b.HasIndex("PersonalID");

                    b.ToTable("Kurs");
                });

            modelBuilder.Entity("SkolSystem.Models.Personal", b =>
                {
                    b.Property<int>("PersonalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonalID"));

                    b.Property<string>("AnställningsDatum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Befattning")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Lön")
                        .HasColumnType("int");

                    b.Property<string>("PEfternamn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PFörnamn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonalID");

                    b.ToTable("Personal");
                });

            modelBuilder.Entity("SkolSystem.Models.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentID"));

                    b.Property<int>("KlassID")
                        .HasColumnType("int");

                    b.Property<string>("SEfternamn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SFörnamn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentID");

                    b.HasIndex("KlassID");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("SkolSystem.Models.Betyg", b =>
                {
                    b.HasOne("SkolSystem.Models.Kurs", "Kurs")
                        .WithMany("Betyg")
                        .HasForeignKey("KursID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkolSystem.Models.Personal", "Lärare")
                        .WithMany("Betyg")
                        .HasForeignKey("PersonalID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SkolSystem.Models.Student", "Student")
                        .WithMany("Betyg")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kurs");

                    b.Navigation("Lärare");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SkolSystem.Models.Kurs", b =>
                {
                    b.HasOne("SkolSystem.Models.Personal", "Lärare")
                        .WithMany("Kurser")
                        .HasForeignKey("PersonalID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lärare");
                });

            modelBuilder.Entity("SkolSystem.Models.Student", b =>
                {
                    b.HasOne("SkolSystem.Models.Klass", "Klass")
                        .WithMany("Studenter")
                        .HasForeignKey("KlassID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klass");
                });

            modelBuilder.Entity("SkolSystem.Models.Klass", b =>
                {
                    b.Navigation("Studenter");
                });

            modelBuilder.Entity("SkolSystem.Models.Kurs", b =>
                {
                    b.Navigation("Betyg");
                });

            modelBuilder.Entity("SkolSystem.Models.Personal", b =>
                {
                    b.Navigation("Betyg");

                    b.Navigation("Kurser");
                });

            modelBuilder.Entity("SkolSystem.Models.Student", b =>
                {
                    b.Navigation("Betyg");
                });
#pragma warning restore 612, 618
        }
    }
}
